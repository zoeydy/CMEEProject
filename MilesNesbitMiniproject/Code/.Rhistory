observed_data_fits <- rbind(gsummary, observed_data_fits)
}
View(tt_2)
View(data)
View(TPC_fits)
View(res)
View(res)
estimated_tt <- data.frame(spp_species=as.character.factor(character()),
loga=as.numeric(c()),
Temp2=as.numeric(c()),)
estimated_tt <- data.frame(spp_species=character(),
loga=as.numeric(c()),
Temp2=as.numeric(c()),)
estimated_tt <- data.frame(spp_species=character(c()),
loga=as.numeric(c()),
Temp2=as.numeric(c()),)
estimated_tt <- data.frame(spp_species=as.character(c()),
loga=as.numeric(c()),
Temp2=as.numeric(c()),)
estimated_tt <- data.frame(spp_species=as.character(c()),
loga=as.numeric(c()),
Temp2=as.numeric(c()))
estimated_tt <- data.frame(spp_species=as.factor(c()),
loga=as.numeric(c()),
Temp2=as.numeric(c()))
for (spp_df in res){
Temp2 <- (1 / (k * (spp_df$Temp+273.15))) - (1 / (k * (15+273.15)))
loga <- log(spp_df$a0)
estimated_tt <- rbind(estimated_tt, data.frame(Temp2, loga, spp_species=spp_df$spp_species))
}
View(estimated_tt)
# Get df of log(model_a) and normalised 1/kt & spp values
# Lm to get slope
estimated_data_fits <- list()
for (i in unique(estimated_tt$spp_species)){
fsummary = lm(loga ~ Temp2, data = estimated_tt, subset = spp_species == i)
gsummary <- as.data.frame(summary(fsummary)$coeff[2])
gsummary$species = i
estimated_data_fits <- rbind(gsummary, estimated_data_fits)
}
# left join two dfs on spp
final_df <- dplyr::left_join(observed_data_fits, estimated_data_fits, by="spp_species")
# left join two dfs on spp
final_df <- dplyr::left_join(observed_data_fits, estimated_data_fits, by="species")
colnames(observed_data_fits) <- c("slope_obs", "species")
colnames(estimated_data_fits) <- c("slope_exp", "species")
# left join two dfs on spp
final_df <- dplyr::left_join(observed_data_fits, estimated_data_fits, by="species")
# find difference between actual and slope model and add as seperate column
# get hist of new column
final_df <- final_df %>%
mutate(Obs-Exp = observed_data_fits - estimated_data_fits)
# find difference between actual and slope model and add as seperate column
# get hist of new column
final_df <- final_df %>%
mutate('Obs-Exp' = observed_data_fits - estimated_data_fits)
# find difference between actual and slope model and add as seperate column
# get hist of new column
final_df <- final_df %>%
mutate(Obs_Exp = observed_data_fits - estimated_data_fits)
View(final_df)
final_df <- final_df[-c(1,2)]
# find difference between actual and slope model and add as seperate column
# get hist of new column
final_df <- final_df %>%
mutate(Obs_Exp = observed_data_fits - estimated_data_fits)
View(final_df)
# left join two dfs on spp
final_df <- dplyr::left_join(observed_data_fits, estimated_data_fits, by="species")
final_df <- final_df[-c(1,2)]
View(final_df)
# left join two dfs on spp
final_df <- dplyr::left_join(observed_data_fits, estimated_data_fits, by="species")
final_df <- final_df[-c(1,2),]
View(final_df)
# find difference between actual and slope model and add as seperate column
# get hist of new column
final_df <- final_df %>%
mutate(Obs_Exp = observed_data_fits - estimated_data_fits)
View(final_df)
# find difference between actual and slope model and add as seperate column
# get hist of new column
final_df <- final_df %>%
mutate(Obs_Exp = slope_obs - slope_exp)
View(final_df)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram()
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 5)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 23)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 1)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.00001)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.001)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.001)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.01)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.1)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.05)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.03)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.5)
ggplot(final_df, aes(x= Obs_Exp))+geom_histogram(binwidth = 0.2)
ggplot(final_df, aes(x= Obs_Exp))+geom_density(binwidth = 0.2)
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')
ggplot(final_df, aes(x= Obs_Exp))+
geom_freqpoly(color= 'red')
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')+
geom_histogram()+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= Obs_Exp))+
geom_histogram(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
write.csv(final_df, "../Results/Formated/Obs_Exp_E.csv")
View(final_df)
View(final_df)
#analysis chart
##real analysis
TPC_fits <- params_df %>%
dplyr::select(-data,-fits) %>%
pivot_wider(names_from = Param, values_from = c(B0,E)) %>%
filter(PopBio_unts =='N' |PopBio_unts =='CFU'|PopBio_unts =='CFU/g') %>%
group_by(spp_species) %>%
summarise(B0_r = mean(B0_r), B0_K = mean(B0_K), E_r = mean(E_r))
TPC_fits
T_vec = seq(min(CFU$Temp), max(CFU$Temp), length.out = 100)
res <- list()
for(i in 1:nrow(TPC_fits)){
data <- TPC_fits[i,]
res[[i]] <- data.frame(Temp = T_vec,
a0 = exp(data$B0_r - data$B0_K),
aE = 2*data$E_r,
log_a_pred = (data$B0_r - data$B0_K) + (2*data$E_r * ((1 / (k * (T_vec+273.15))) - (1 / (k * (15+273.15))))) ,
spp_species = as.character(data$spp_species))
}
View(res)
bind_rows(res)
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red')+
geom_smooth(method='lm', formula= y~x)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red')+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
estimated_tt <- data.frame(spp_species=as.factor(c()),
loga=as.numeric(c()),
Temp2=as.numeric(c()))
for (spp_df in res){
Temp2 <- (1 / (k * (spp_df$Temp+273.15))) - (1 / (k * (15+273.15)))
loga <- log(spp_df$a0)
estimated_tt <- rbind(estimated_tt, data.frame(Temp2, loga, spp_species=spp_df$spp_species))
}
tt <- CFU %>%
mutate(a = r / K) %>%
mutate(loga = log(a)) %>%
mutate(Temp2 = (1 / (k * (Temp+273.15))) - (1 / (k * (15+273.15))))
#analysis chart
z <- list()
species_name_list <- unique(tt$spp_species)
species_name_list <- unique(tt$spp_species)
for (i in species_name_list){
fsummary = lm(loga ~ Temp2, data = tt, subset = spp_species == i)
gsummary <- as.data.frame(summary(fsummary)$coeff)
gsummary$species = i
z <- rbind(gsummary, z)
}
z
# Get df of log(a) and normalised 1/kt & spp values
tt_2 <- tt %>% dplyr::select(spp_species, Temp2, loga)
# Lm to get slope
observed_data_fits <- list()
for (i in unique(tt_2$spp_species)){
fsummary = lm(loga ~ Temp2, data = tt_2, subset = spp_species == i)
gsummary <- as.data.frame(summary(fsummary)$coeff[2])
gsummary$species = i
observed_data_fits <- rbind(gsummary, observed_data_fits)
}
colnames(observed_data_fits) <- c("slope_obs", "species")
observed_data_fits
estimated_tt
# Get df of log(model_a) and normalised 1/kt & spp values
# Lm to get slope
estimated_data_fits <- list()
for (i in unique(estimated_tt$spp_species)){
fsummary = lm(loga ~ Temp2, data = estimated_tt, subset = spp_species == i)
gsummary <- as.data.frame(summary(fsummary)$coeff[2])
gsummary$species = i
estimated_data_fits <- rbind(gsummary, estimated_data_fits)
}
observed_data_fits
bind_rows(res)
summarise(Ea = mean(Ea)
bind_rows(res) %>%
group_by(spp_species) %>%
summarise(Ea = mean(Ea))
bind_rows(res) %>%
group_by(spp_species)
bind_rows(res) %>%
group_by(spp_species) %>%
summarise(Ea = mean(aE))
observed_data_fits
bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species)
bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(observed_data_fits, . , by="species")
bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(., observed_data_fits , by="species")
bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(., observed_data_fits , by="species") %>%
mutate(slope_diff = slope_obs - slope_exp)
final_df <- bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(., observed_data_fits , by="species") %>%
mutate(slope_diff = slope_obs - slope_exp)
#get slope difference
final_df <- bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(., observed_data_fits , by="species") %>%
mutate(slope_diff = slope_obs - slope_exp)
ggplot(final_df, aes(x= Obs_Exp))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
write.csv(final_df, "../Results/Formated/Obs_Exp_E.csv")
#get slope difference
final_df <- bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(., observed_data_fits , by="species") %>%
mutate(slope_diff = slope_obs - slope_exp)
ggplot(final_df, aes(x= slope_diff))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= slope_diff))+
geom_histogram(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= slope_diff))+
geom_histogram(fill= 'red', bins = 10)+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= slope_diff))+
geom_histogram(fill= 'red', bins = 15)+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= slope_diff))+
geom_hist(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
ggplot(final_df, aes(x= slope_diff))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
final_df
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red')+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red')+
geom_smooth(method = 'lm', se = FALSE)
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
dyplr::filter(-c['NA PCT', 'Brochothrix thermosphacta']) %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
dplyr::filter(-c['NA PCT', 'Brochothrix thermosphacta']) %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
dplyr::filter(-c['NA PCT', 'Brochothrix thermosphacta']) %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
View(CFU)
CFU %>%
mutate(a = r / K)  %>%
CFU[ !grepl("NA PCT", CFU$spp_species) , ] %>%
CFU[ !grepl("Brochothrix thermosphacta", CFU$spp_species) , ] %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
View(CFU)
CFU <- CFU[ !grepl("NA PCT", CFU$spp_species) , ]
CFU <- CFU[ !grepl("Brochothrix thermosphacta", CFU$spp_species) , ]
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 3)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 2)+
geom_smooth(method = 'lm', se = FALSE, size = 3)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 2)+
geom_smooth(method = 'lm', se = FALSE, size = 2)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 2)+
geom_smooth(method = 'lm', se = FALSE, size = 1)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 1.5)+
geom_smooth(method = 'lm', se = FALSE, size = 1)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
CFU %>%
mutate(a = r / K)  %>%
ggplot(aes(Temp,log(a))) +
geom_point(size= 3)+
facet_wrap(~spp_species,scales="free")+
# geom_hline(aes(yintercept = a0), data = bind_rows(res))
geom_line(data = bind_rows(res), aes(y = (log_a_pred)), color = 'red', size = 1.5)+
geom_smooth(method = 'lm', se = FALSE, size = 1)+
ggtitle("Comparison of Actual Line by Predicted Line")+
xlab('Temperature')+
ylab('log of a')
tt <- CFU %>%
mutate(a = r / K) %>%
mutate(loga = log(a)) %>%
mutate(Temp2 = (1 / (k * (Temp+273.15))) - (1 / (k * (15+273.15))))
#analysis chart
z <- list()
species_name_list <- unique(tt$spp_species)
for (i in species_name_list){
fsummary = lm(loga ~ Temp2, data = tt, subset = spp_species == i)
gsummary <- as.data.frame(summary(fsummary)$coeff)
gsummary$species = i
z <- rbind(gsummary, z)
}
# Get df of log(a) and normalised 1/kt & spp values
tt_2 <- tt %>% dplyr::select(spp_species, Temp2, loga)
# Lm to get slope
observed_data_fits <- list()
for (i in unique(tt_2$spp_species)){
fsummary = lm(loga ~ Temp2, data = tt_2, subset = spp_species == i)
gsummary <- as.data.frame(summary(fsummary)$coeff[2])
gsummary$species = i
observed_data_fits <- rbind(gsummary, observed_data_fits)
}
colnames(observed_data_fits) <- c("slope_obs", "species")
#get slope difference
final_df <- bind_rows(res) %>%
group_by(spp_species) %>%
summarise(slope_exp = mean(aE)) %>%
rename(species = spp_species) %>%
dplyr::left_join(., observed_data_fits , by="species") %>%
mutate(slope_diff = slope_obs - slope_exp)
ggplot(final_df, aes(x= slope_diff))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')
write.csv(final_df, "../Results/Formated/Obs_Exp_E.csv")
ggplot(final_df, aes(x= slope_diff))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')+
geom_vline(xintercept=c(0), linetype="dotted")
ggplot(final_df, aes(x= slope_diff))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')+
geom_vline(xintercept=c(0), linetype="dotted", color = 'blue')
ggplot(final_df, aes(x= slope_diff))+
geom_density(color= 'red')+
ggtitle('Observed - Expected E Distribution')+
xlab('Observed -Expected E')+
geom_vline(xintercept=c(0), color = 'blue')
View(CFU)
View(tt_2)
unique(df$Citation)
View(files)
