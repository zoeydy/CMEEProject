stopCluster()
result
# do several simulations
cl <- makeCluster(100)
registerDoParallel(cl)
result <- foreach(1:100, .combine = 'c') %dopar%{
data <- sim_genetic_drive(q0=0.05, d=0.6, t=10, N0=500, R0=2, M=500)
return(mean(data))
}
stopCluster()
result
# do several simulations
cl <- makeCluster(100)
registerDoParallel(cl)
result <- foreach(1:100, .combine = 'c') %dopar%{
data <- sim_genetic_drive(q0=0.05, d=0.6, t=50, N0=500, R0=2, M=500)
return(mean(data))
}
stopCluster()
result
sim_genetic_drive(q0=0.05, d=0.6, t=10, N0=500, R0=2, M=500)
sim_genetic_drive(q0=0.05, d=0.6, t=10, N0=500, R0=2, M=500)
# do several simulations
cl <- makeCluster(100)
registerDoParallel(cl)
result <- foreach(1:100, .combine = 'c') %dopar%{
data <- sim_genetic_drive(q0=0.05, d=0.6, t=50, N0=500, R0=2, M=500)
return()
}
stopCluster()
result
install.packages("matrixcalc")
install.packages("matlib")
version
install.packages("matlib")
source('~/.active-rstudio-document', echo=TRUE)
P100
library(matlib)
A <- matrix(c(5,1,3,-1,2,2,2,-1,-1), nrow = 3)
a <- c(6,-1,1)
solve(A, a)
A <- matrix(c(3,5,2,2,3,4,1,2,1), nrow = 3)
a <- c(500,900,550)
solve(A, a)
A <- matrix(c(3,5,2,2,3,4), nrow = 2)
a <- c(500,900)
plotEqn(A,a)
plotEqn3d(A,a)
require(matrixcalc)
M <- matrix(c(0.94,0.05,0.01,0.02,0.86,0.12,0.01,0.06,0.93),nrow = 3)
matrix.power(M, 19)
matrix.power(M, 3)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 8)
a <- 26+41+74
matrix(c(26/a,41/a, 74/a), nrow = 3, ncol = 1)
matrix.power(M, 100)
eigen(M)
M <- matrix(c(0.8,0.2,0.1,0.9),nrow = 2)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 100)
eigen(M)
M <- matrix(c(3,-2,3,2,-2,6,-1,2,-1),nrow = 3)
eigen(M)
M <- matrix(c(0.8,0.2,0.1,0.9),nrow = 2)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 100)
eigen(M)
M <- matrix(c(8,2,1,9),nrow = 2)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 100)
eigen(M)
M <- matrix(c(0.8,0.2,0.1,0.9),nrow = 2)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 100)
eigen(M)
M <- matrix(c(0.2,0.8,0.9,0.1),nrow = 2)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 100)
eigen(M)
M <- matrix(c(0.9,0.1,0.2,0.8),nrow = 2)
matrix.power(M, 1)
matrix.power(M, 2)
matrix.power(M, 3)
matrix.power(M, 4)
matrix.power(M, 5)
matrix.power(M, 6)
matrix.power(M, 7)
matrix.power(M, 100)
eigen(M)
setwd("~/Documents/Project/code")
setwd("~/Documents/CMEEProject/code")
source('~/Documents/CMEEProject/code/mini_fit_model.R')
source('~/Documents/CMEEProject/code/mini_data.R')
source('~/Documents/CMEEProject/code/mini_data.R')
source('~/Documents/CMEEProject/code/mini_data.R')
source('~/Documents/CMEEProject/code/mini_fit_model.R')
####################
# r_max V.S. t_lag #
####################
temps <- unique(Data$Temp)
species <- unique(Data$Species)
####################
# r_max V.S. t_lag #
####################
temps <- unique(Data$Temp)
species <- unique(Data$Species)
length(species)
length(unique(Data$Species))
k <- 1
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
length(unique(data.spe$Temp))
unique(data.spe$id)
unique(data.spe$ID)
unique(data.spe$Medium)
unique(data.spe$Citation)
unique(data.spe$Rep)
# 1. read the data, starting value and compare models
infos <- read.csv("../data/fit.id.info.csv")
plot.points <- read.csv("../data/fit.id.plot.csv")
Data <- read.csv('../data/mini_pop.csv')
Data <- Data[order(Data[,'id'], Data[,'Time']),]
id.spe <- unique(data.spe$id)
plot.spe <- subset(infos, infos$id == id.spe)
View(plot.spe)
unique(data.spe$id)
testdf <- subset(Data, Data$id == 23)
plot(testdf$Time, testdf$PopBio)
View(infos)
plot.df
id.spe
plot.spe <- subset(infos, infos$id == id.spe)
View(plot.spe)
id.spe
length(unique(infos$id))
info.spe <- subset(infos, infos$id == id.spe)
unique(info.spe$id)
View(info.spe)
info.spe <- subset(infos, infos$id == 23)
unique(info.spe$id)
id.spe
info.spe <- subset(infos, infos$id == id.spe)
unique(info.spe$id)
info.spe <- subset(infos, infos$id == c(1,23,45,67))
unique(info.spe$id)
subset(infos, infos$id == 23)
subset(infos, infos$id == c(1,23,45,67))
subset(infos, infos$id == 45)
infos[infos$id == c(1,23,45,67),]
infos[infos$id == c(1,23,45,67),]
rm(list = ls())
graphics.off()
setwd("~/Documents/Project/code")
require(ggplot2)
# 1. read the data, starting value and compare models
infos <- read.csv("../data/fit.id.info.csv")
plot.points <- read.csv("../data/fit.id.plot.csv")
Data <- read.csv('../data/mini_pop.csv')
Data <- Data[order(Data[,'id'], Data[,'Time']),]
setwd("~/Documents/CMEEProject/code")
infos[infos$id == c(1,23,45,67),]
data.spe <- subset(Data, Data$Species == spe)
####################
# r_max V.S. t_lag #
####################
temps <- unique(Data$Temp)
species <- unique(Data$Species)
k =1
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
View(data.spe)
unique(data.spe$id)
id.spe <- unique(data.spe$id)
info.spe <- infos[infos$id == id.spe,]
View(info.spe)
library(dplyr)
test <- filter(infos, id == id.spe)
View(test)
class(infos$id)
subset(infos, infos$id == 45)
id.spe
infos[infos$id == id.spe,]
subset(infos, infos$id == '45')
spe
subset(infos, infos$id == 23)
rm(list = ls())
graphics.off()
graphics.off()
setwd("~/Documents/CMEEProject/code")
require(ggplot2)
# 1. read the data, starting value and compare models
infos <- read.csv("../data/fit.id.info.csv")
plot.points <- read.csv("../data/fit.id.plot.csv")
Data <- read.csv('../data/mini_pop.csv')
Data <- Data[order(Data[,'id'], Data[,'Time']),]
####################
# r_max V.S. t_lag #
####################
temps <- unique(Data$Temp)
species <- unique(Data$Species)
spe <- species[k]
k <- 1
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
spe
id.spe
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
data.spe
View(data.spe)
id.spe <- unique(data.spe$id)
id.spe
info.spe <- infos[infos$id == id.spe,]
View(info.spe)
id.spe
info.spe <- infos[infos$id == c(1, 23, 45, 67), ]
View(info.spe)
info.spe <- infos[infos$id == c('1', '23', '45', '67'), ]
View(info.spe)
info.spe <- infos[infos$id == 23, ]
id.spe
View(infos)
length(unique(infos$id))
test <- filter(infos, id == id.spe)
test <- filter(infos, id == id.spe)
infos$id
library(dplyr)
test <- filter(infos, id == id.spe)
View(test)
test %>% filter(
id == id.spe
)
length(id.spe
)
for (l in 1:length(id.spe)) {
df <- subset(infos, infos$id == id.spe[l])
info.spe <- rbind(info.spe, df)
}
View(info.spe)
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
id.spe <- unique(data.spe$id)
info.spe <- data.frame()
for (l in 1:length(id.spe)) {
df <- subset(infos, infos$id == id.spe[l])
info.spe <- rbind(info.spe, df)
}
View(info.spe)
ggplot(info.spe, aes(x = info.spe$rmax, colour = model)) +
geom_bar() +
theme_bw() +
labs(x = "Model", y = "Count")
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw()
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw()
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
geom_label(x = '')
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
geom_label(x = 'x')
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labels(x = 'x')
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labels(x = 'lag time', y = 'maximun growth rate')
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate')
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw()
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate')
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
title(main = paste0('Parameter estimation of species: ', spe))
graphics.off()
paste0('Parameter estimation of species: ', spe)
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
title(main = paste0('Parameter estimation of species: ', spe))
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
ggtitle(main = paste0('Parameter estimation of species: ', spe))
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
ggtitle(paste0('Parameter estimation of species: ', spe))
####################
# r_max V.S. t_lag #
####################
temps <- unique(Data$Temp)
species <- unique(Data$Species)
for (k in length(species)) {
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
id.spe <- unique(data.spe$id)
info.spe <- data.frame()
for (l in 1:length(id.spe)) {
df <- subset(infos, infos$id == id.spe[l])
info.spe <- rbind(info.spe, df)
}
filename <- paste0("../results/param_species/", k)
png(filename)
ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
ggtitle(paste0('Parameter estimation of species: ', spe))
graphics.off()
}
for (k in length(species)) {
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
id.spe <- unique(data.spe$id)
info.spe <- data.frame()
for (l in 1:length(id.spe)) {
df <- subset(infos, infos$id == id.spe[l])
info.spe <- rbind(info.spe, df)
}
filename <- paste0("../results/param_species/", k)
png(filename)
p <- ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
ggtitle(paste0('Parameter estimation of species: ', spe))
print(p)
graphics.off()
}
for (k in 1:length(species)) {
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
id.spe <- unique(data.spe$id)
info.spe <- data.frame()
for (l in 1:length(id.spe)) {
df <- subset(infos, infos$id == id.spe[l])
info.spe <- rbind(info.spe, df)
}
filename <- paste0("../results/param_species/", k)
png(filename)
p <- ggplot(info.spe, aes(x = info.spe$tlag, y = info.spe$rmax, colour = model)) +
geom_point(size = 1) +
theme_bw() +
labs(x = 'lag time', y = 'maximun growth rate') +
ggtitle(paste0('Parameter estimation of species: ', spe))
print(p)
graphics.off()
}
k <- 33
spe <- species[k]
data.spe <- subset(Data, Data$Species == spe)
id.spe <- unique(data.spe$id)
info.spe <- data.frame()
View(data.spe)
View(info.spe)
View(infos)
spe
id.spe
infos[infos$id == 231,]
infos[infos$id == 234,]
infos[infos$id == 237,]
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
idname
View(comp_df)
title
paste0("../results/fit/plot_", idname,".png")
FileName <- paste0("../results/fit/plot_", idname,".png")
png(file = FileName)
p <- ggplot(data, aes(x = Time, y = logN)) +
geom_point(size = 1) +
labs(x = "Time (h)", y = "Logarithm of the population size (logN)") +
# ggtitle("Model comparison plot") +
geom_line(data = plot.df, aes(x = time, y = plot.point, colour = model), size=1) +
theme(legend.position = 'bottom') +
annotate('text', label = title, x = min(data$Time), y = min(data$logN), hjust = -.2, vjust = 0)
# stat_smooth(method = lm, level = 0.95, aes(colour="Cubic")) +
# scale_colour_manual(name="Model", values=c("darkblue", "darkred", "darkgreen"))
print(p)
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
paste0('AICc = ', info.df[info.df$model == model, ]$AICc)
tit1
tit2
tit3
tit4
tit.model <- paste0(model, tit1, tit2, tit3, tit4, collapse = '\n')
tit.model
paste0('model', 'tit1', 'tit2', 'tit3', 'tit4', collapse = '\n')
paste0('model', 'tit1', 'tit2', 'tit3', 'tit4', collapse = '/n')
paste0('model', 'tit1', 'tit2', 'tit3', 'tit4', collapse = '\\n')
cat('model', 'tit1', 'tit2', 'tit3', 'tit4', sep =  = '\n')
cat('model', 'tit1', 'tit2', 'tit3', 'tit4', sep = '\n')
tit.model <- cat(model, tit1, tit2, tit3, tit4, sep = '\n')
tit.model <- cat(model, ": " , tit1, tit2, tit3, tit4, sep = '\n')
tit.model <- cat(model, tit1, tit2, tit3, tit4, sep = '\n')
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
print("hello\nworld\n")
paste0(model, ': , \n', tit1, '\n', tit2,'\n',  tit3,'\n',  tit4)
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
info.df[info.df$model == model, ]
j =2
model <- models[j]
info.df[info.df$model == model, ]
model
j = 2
model <- models[j]
model
models
models[j]
models[1]
j <- 1
models[j]
model <- models[j]
model
for (j in length(models)) {
model <- models[j]
# get plot notation
tit1 <- paste0('AICc = ', info.df[info.df$model == model, ]$AICc)
tit2 <- paste0('AIC = ', info.df[info.df$model == model, ]$AIC)
tit3 <- paste0('BIC = ', info.df[info.df$model == model, ]$BIC)
tit4 <- paste0('Rsquare = ', info.df[info.df$model == model, ]$rsq)
tit.model <- paste0(model, ': , \n', tit1, '\n', tit2,'\n',  tit3,'\n',  tit4)
tit <- c(tit, tit.model)
}
tit
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
filename <- paste0("../results/comparasion_", comp.item[m], ".png")
# visualize comparison
comp.item <- colnames(comp_df)[-1]
for (m in 1:length(comp.item)) {
filename <- paste0("../results/comparasion_", comp.item[m], ".png")
png(filename)
p <- ggplot(comp_df, aes(x = comp_df[, m+1])) +
geom_bar() +
theme_bw() +
labs(x = "Model", y = "Count") +
# scale_x_discrete(labels=c("Gompertz Model", "Baranyi Model")) +
geom_text(stat='count', aes(label=..count..), vjust=-1)
# ggtitle("Which one is the better model? (by comparing AIC)") +
# theme(plot.title = element_text(size = 15, hjust = 0.5, face = "bold"))
print(p)
graphics.off()
}
for (j in length(models)) {
model <- models[j]
# get plot notation
tit1 <- paste0('AICc = ', info.df[info.df$model == model, ]$AICc)
tit2 <- paste0('AIC = ', info.df[info.df$model == model, ]$AIC)
tit3 <- paste0('BIC = ', info.df[info.df$model == model, ]$BIC)
tit4 <- paste0('Rsquare = ', info.df[info.df$model == model, ]$rsq)
tit.model <- paste0(model, ': , \n', tit1, '\n', tit2,'\n',  tit3,'\n',  tit4)
tit <- c(tit, tit.model)
}
tit
source('~/Documents/CMEEProject/code/mini_analyses_plot.R')
