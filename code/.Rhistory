fit.t <- lm(data = spe.df, formula = log.one.tlag~mi.one.over.KT)
fit.t.df <- data.frame(summary(fit.t)$coefficients)
fit.t.df$id = rep(spe.df$id[1],2)
fit.t.df$from = rep("tlag",2)
fit.t.df$param = c("lnA","E")
fit.t.df$sta.spe = spe.df$sta.spe[1]
arrhe.df <- rbind(arrhe.df, fit.r.df, fit.t.df)
}
}
View(meandf)
View(meandf)
spe.df
View(spe.df)
temp.group[i]
unique(spe.df$temp.c)
class(temp.group)
temp.group[!is.na(temp.group)]
temp.group <- temp.group[!is.na(temp.group)]
temp.group
for (i in 1:length(temp.group)) {
df <- spe.df[spe.df$temp.c == temp.group[i],]
df <- subset(df, !is.na(df$log.r))
meandf <- data.frame(temp.c = df$temp.c[1], mean.mi.KT = df$mi.one.over.KT[1],
mean.log.r = mean(df$log.r), CI.r = ci_calc(df$log.r),
mean.log.t = mean(df$log.one.tlag), CI.t = ci_calc(df$log.one.tlag)
)
mean.long <- rbind(mean.long, meandf)
}
mean.long
# 2.max(mean(rate))
df.long.sub <- rbind(mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ],
mean.long[mean.long$mean.log.t == max(mean.long$mean.log.t, na.rm = TRUE), ])
View(df.long.sub)
View(mean.long)
mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ]
# 2.max(mean(rate))
mean.r <- mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ][1]
mean.t <- mean.long[mean.long$mean.log.t == max(mean.long$mean.log.t, na.rm = TRUE), ][1]
mean.r$from = "rmax"
mean.t$from = "tlag"
df.long.sub <- rbind(mean.r, mean.t)
View(df.long.sub)
View(mean.r)
mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ][1]
mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ][1,]
# 2.max(mean(rate))
mean.r <- mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ][1,]
mean.t <- mean.long[mean.long$mean.log.t == max(mean.long$mean.log.t, na.rm = TRUE), ][1,]
mean.r$from = "rmax"
mean.t$from = "tlag"
df.long.sub <- rbind(mean.r, mean.t)
df.long <- rbind(df.long, df.long.sub)
################################################################################
# grouping by species get E with CI and df.long with P_opt for calculating E_L #
################################################################################
arrhe.df <- data.frame()
# vali.spe <- data.frame()
vali.info <- data.frame()
df.long <- data.frame()
spes <- unique(info.sta$sta.spe)
for (i in 1:length(spes)) {
# subset
spe.df <- info.sta[info.sta$sta.spe == spes[i],]
spe.df <- spe.df[spe.df$temp.c <= 30,]
if (nrow(spe.df) < 3 | length(unique(spe.df$temp.c)) < 2) {
arrhe.df <- arrhe.df
}else{
# vali.spe <- rbind(vali.spe, spe.df)
vali.info <- rbind(vali.info, spe.df)
# df.long
# 1.mean
mean.long <- data.frame()
temp.group <- unique(spe.df$temp.c)
temp.group <- temp.group[!is.na(temp.group)]
for (i in 1:length(temp.group)) {
df <- spe.df[spe.df$temp.c == temp.group[i],]
df <- subset(df, !is.na(df$log.r))
meandf <- data.frame(temp.c = df$temp.c[1], mean.mi.KT = df$mi.one.over.KT[1],
mean.log.r = mean(df$log.r), CI.r = ci_calc(df$log.r),
mean.log.t = mean(df$log.one.tlag), CI.t = ci_calc(df$log.one.tlag)
)
mean.long <- rbind(mean.long, meandf)
}
# 2.max(mean(rate))
mean.r <- mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ][1,]
mean.t <- mean.long[mean.long$mean.log.t == max(mean.long$mean.log.t, na.rm = TRUE), ][1,]
mean.r$from = "rmax"
mean.t$from = "tlag"
df.long.sub <- rbind(mean.r, mean.t)
df.long <- rbind(df.long, df.long.sub)
# E_S
fit.r <- lm(data = spe.df, formula = log.r~mi.one.over.KT)
fit.r.df <- data.frame(summary(fit.r)$coefficients)
fit.r.df$id <- rep(spe.df$id[1],2)
fit.r.df$from = rep("rmax",2)
fit.r.df$param = c("lnA","E")
fit.r.df$sta.spe = spe.df$sta.spe[1]
fit.t <- lm(data = spe.df, formula = log.one.tlag~mi.one.over.KT)
fit.t.df <- data.frame(summary(fit.t)$coefficients)
fit.t.df$id = rep(spe.df$id[1],2)
fit.t.df$from = rep("tlag",2)
fit.t.df$param = c("lnA","E")
fit.t.df$sta.spe = spe.df$sta.spe[1]
arrhe.df <- rbind(arrhe.df, fit.r.df, fit.t.df)
}
}
View(df.long)
View(df.long.sub)
View(df.long)
View(df.long.sub)
View(df.long)
View(fit.id.info)
df.long <- rbind(df.long, df.long.sub)
View(df.long)
# E_S
fit.r <- lm(data = spe.df, formula = log.r~mi.one.over.KT)
fit.r.df <- data.frame(summary(fit.r)$coefficients)
fit.r.df$id <- rep(spe.df$id[1],2)
fit.r.df$from = rep("rmax",2)
data.frame(summary(fit.r)$coefficients)
plot(spe.df$log.r, spe.df$temp.c)
nrow(spe.df) < 3
View(spe.df)
################################################################################
# grouping by species get E with CI and df.long with P_opt for calculating E_L #
################################################################################
arrhe.df <- data.frame()
# vali.spe <- data.frame()
vali.info <- data.frame()
df.long <- data.frame()
spes <- unique(info.sta$sta.spe)
for (i in 1:length(spes)) {
# subset
spe.df <- info.sta[info.sta$sta.spe == spes[i],]
spe.df <- spe.df[spe.df$temp.c <= 30,]
spe.df <- subset(spe.df, !is.na(spe.df$temp.c))
if (nrow(spe.df) < 3 | length(unique(spe.df$temp.c)) < 2) {
arrhe.df <- arrhe.df
}else{
# vali.spe <- rbind(vali.spe, spe.df)
vali.info <- rbind(vali.info, spe.df)
# df.long
# 1.mean
mean.long <- data.frame()
temp.group <- unique(spe.df$temp.c)
temp.group <- temp.group[!is.na(temp.group)]
for (i in 1:length(temp.group)) {
df <- spe.df[spe.df$temp.c == temp.group[i],]
df <- subset(df, !is.na(df$log.r))
meandf <- data.frame(temp.c = df$temp.c[1], mean.mi.KT = df$mi.one.over.KT[1],
mean.log.r = mean(df$log.r), CI.r = ci_calc(df$log.r),
mean.log.t = mean(df$log.one.tlag), CI.t = ci_calc(df$log.one.tlag)
)
mean.long <- rbind(mean.long, meandf)
}
# 2.max(mean(rate))
mean.r <- mean.long[mean.long$mean.log.r == max(mean.long$mean.log.r, na.rm = TRUE), ][1,]
mean.t <- mean.long[mean.long$mean.log.t == max(mean.long$mean.log.t, na.rm = TRUE), ][1,]
mean.r$from = "rmax"
mean.t$from = "tlag"
df.long.sub <- rbind(mean.r, mean.t)
df.long <- rbind(df.long, df.long.sub)
# E_S
fit.r <- lm(data = spe.df, formula = log.r~mi.one.over.KT)
fit.r.df <- data.frame(summary(fit.r)$coefficients)
fit.r.df$id <- rep(spe.df$id[1],2)
fit.r.df$from = rep("rmax",2)
fit.r.df$param = c("lnA","E")
fit.r.df$sta.spe = spe.df$sta.spe[1]
fit.t <- lm(data = spe.df, formula = log.one.tlag~mi.one.over.KT)
fit.t.df <- data.frame(summary(fit.t)$coefficients)
fit.t.df$id = rep(spe.df$id[1],2)
fit.t.df$from = rep("tlag",2)
fit.t.df$param = c("lnA","E")
fit.t.df$sta.spe = spe.df$sta.spe[1]
arrhe.df <- rbind(arrhe.df, fit.r.df, fit.t.df)
}
}
View(df.long)
####################################################################
# get the E_L and corresponding CI using validate species data set #
####################################################################
df.long$mi.one.over.KT <- -1/K*(273.16 + df.long$temp.c)
unique(df.long$mi.one.over.KT == df.long$mean.mi.KT)
View(df.long)
####################################################################
# get the E_L and corresponding CI using validate species data set #
####################################################################
df.long$mi.one.over.KT <- -1/(K*(273.16 + df.long$temp.c))
unique(df.long$mi.one.over.KT == df.long$mean.mi.KT)
####################################################################
# get the E_L and corresponding CI using validate species data set #
####################################################################
# df.long$mi.one.over.KT <- -1/(K*(273.16 + df.long$temp.c))
# unique(df.long$mi.one.over.KT == df.long$mean.mi.KT)
fit.r.spe <- lm(df.long, formula = mean.log.r ~ mi.one.over.KT)
fit.t.spe <- lm(fit.vali.info, formula = log.one.tlag~mi.one.over.KT)
CI.r.spe <- confint(fit.r.spe, level = 0.95)
CI.t.spe <- confint(fit.t.spe, level = 0.95)
edf <- fit.vali[fit.vali$param == "E",]
# save E value tables to latex
E_r <- subset(edf, edf$from == "rmax")
E_t <- subset(edf, edf$from == "tlag")
E_rmax <- data.frame(Species = E_r$sta.spe, "E value" = E_r$Estimate,
"Confidence Interval" = 2*E_r$Std..Error, "P value" = E_r$Pr...t..)
E_rmax_ave <- data.frame(Species = "Mean Value", "E value" = mean(E_r$Estimate),
"Confidence Interval" = ci_calc(E_r$Estimate), "P value" = mean(E_r$Pr...t..))
E_rmax <- rbind(E_rmax, E_rmax_ave)
E_tlag <- data.frame(Species = E_t$sta.spe, "E value" = E_t$Estimate,
"Confidence Interval" = 2*E_t$Std..Error, "P value" = E_t$Pr...t..)
E_tlag_ave <- data.frame(Species = "Mean Value", "E value" = mean(E_t$Estimate),
"Confidence Interval" = ci_calc(E_t$Estimate), "P value" = mean(E_t$Pr...t..))
E_tlag <- rbind(E_tlag, E_tlag_ave)
library(xtable)
print(xtable(E_rmax, type = "latex", digits = -10), file = "../results/arrhenius/E_rmax_table.tex")
print(xtable(E_tlag, type = "latex", digits = -10), file = "../results/arrhenius/E_tlag_table.tex")
mean.e.r <- mean(E_r$Estimate)
mean.e.t <- mean(E_t$Estimate)
mean.e.r.ci <- ci_calc(E_r$Estimate)
mean.e.t.ci <- ci_calc(E_t$Estimate)
p <- ggplot(data = edf, aes(x = Estimate, y = sta.spe, colour = from)) +
geom_point()+
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_errorbar(data = edf, aes(xmin = Estimate - 2*Std..Error, xmax = Estimate + 2*Std..Error)) +
# geom_rect(aes(xmin=CI.r.spe[2,1], xmax=CI.r.spe[2,2], ymin=-Inf, ymax=Inf), color = 'red') +
# geom_rect(aes(xmin=CI.t.spe[2,1], xmax=CI.t.spe[2,2], ymin=-Inf, ymax=Inf), color = 'blue') +
# add CI of E_L
annotate("rect", xmin=CI.r.spe[2,1], xmax=CI.r.spe[2,2], ymin=-Inf, ymax=Inf, alpha = .2) +
annotate("rect", xmin=CI.t.spe[2,1], xmax=CI.t.spe[2,2], ymin=-Inf, ymax=Inf, alpha = .2) +
# add E_L slope from fitting the whole validate data set
geom_vline(xintercept=fit.r.spe$coefficients[2], linetype="dashed", color = "red") +
geom_vline(xintercept=fit.t.spe$coefficients[2], linetype="dashed", color = "blue") +
annotate("text", label = "E_L estimated from rmax",
size = 2, x = fit.r.spe$coefficients[2]+3, y = "Pseudomonas") +
geom_segment(aes(x = fit.r.spe$coefficients[2], y = "Pseudomonas", xend = fit.r.spe$coefficients[2]+2, yend = "Pseudomonas"),
arrow = arrow(length = unit(0.15, "cm")), colour = 'black') +
annotate("text", label = "E_L estimated from tlag",size = 2, x = fit.t.spe$coefficients[2]+2, y = "pseudomonas.sp") +
geom_segment(aes(x = fit.t.spe$coefficients[2], y = "pseudomonas.sp", xend = fit.t.spe$coefficients[2]+1, yend = "pseudomonas.sp"),
arrow = arrow(length = unit(0.15, "cm")), colour = 'black') +
# add E_s(mean of E_species)
geom_vline(xintercept=mean.e.r, linetype="dashed", color = "darkred") +
geom_vline(xintercept=mean.e.t, linetype="dashed", color = "darkblue") +
annotate("text", label = "E_S estimated from rmax",size = 2, x = mean.e.r+2, y = "Staphylococcus") +
geom_segment(aes(x = mean.e.r, y = "Staphylococcus", xend = mean.e.r+1, yend = "Staphylococcus"),
arrow = arrow(length = unit(0.1, "cm")), colour = 'black') +
annotate("text", label = "E_S estimated from tlag", size = 2, x = mean.e.t+2, y = "Lactobaciulus.plantarum") +
geom_segment(aes(x = mean.e.t, y = "Lactobaciulus.plantarum", xend = mean.e.t+1, yend = "Lactobaciulus.plantarum"),
arrow = arrow(length = unit(0.1, "cm")), colour = 'black') +
# add CI of E_s
annotate("rect", xmin=mean.e.r-mean.e.r.ci, xmax=mean.e.r+mean.e.r.ci,ymin=-Inf, ymax=Inf, alpha = .2) +
annotate("rect", xmin=mean.e.t-mean.e.t.ci, xmax=mean.e.t+mean.e.t.ci,ymin=-Inf, ymax=Inf, alpha = .2)
p
source('~/Documents/CMEEProject/code/arrhenius.R')
##########################################################################################
# log of rmax and 1/tlag in mean value with CI VS temperature(°C) less than 30°C  #
##########################################################################################
mean_df <- data.frame()
temp.c.s <- unique(info.sta$temp.c)
for (i in 1:length(temp.c.s)) {
df1 <- subset(info.sta, info.sta$temp.c == temp.c.s[i])
mean1 <- data.frame(temp.c = df1$temp.c[1],
mean.rmax = mean(log(df1$rmax)),
mean.1tlag = mean(log(1/df1$tlag)),
ci.rmax = ci_calc(log(df1$rmax)),
ci.1tlag = ci_calc(log(1/df1$tlag)))
mean_df <- rbind(mean_df, mean1)
}
# 1.plot
# rmax
r.temp <- mean_df[mean_df$mean.rmax == max(mean_df$mean.rmax),]$temp.c
r.temp <- 30
p <- ggplot(data = mean_df, aes(x = temp.c, y =mean.rmax )) +
geom_point() +
# theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
stat_smooth(data = mean_df[mean_df$temp.c <= r.temp,],
formula = y~x, method = lm) +
geom_errorbar(aes(ymin=mean.rmax - ci.rmax,
ymax=mean.rmax + ci.rmax,
width = 0.1)) +
geom_ribbon(data = mean_df[mean_df$temp.c >= r.temp,], aes(ymin=-Inf, ymax=Inf, alpha = .5 )) +
theme(legend.position = 'none') +
labs(title = "Mean of log(rmax) VS temperature(°C) less than T_opt", x = "Temperature(°C)", y = "Mean of log(rmax) +/- CI")
p
########################################################
# grouping by species get E with CI #
########################################################
arrhe.df <- data.frame()
# vali.spe <- data.frame()
vali.info <- data.frame()
spes <- unique(info.sta$sta.spe)
for (i in 1:length(spes)) {
# subset
spe.df <- info.sta[info.sta$sta.spe == spes[i],]
if (nrow(spe.df) < 3 | length(unique(spe.df$temp.c)) < 2) {
arrhe.df <- arrhe.df
}else{
# vali.spe <- rbind(vali.spe, spe.df)
vali.info <- rbind(vali.info, spe.df)
fit.r <- lm(data = spe.df, formula = log.r~mi.one.over.KT)
fit.r.df <- data.frame(summary(fit.r)$coefficients)
fit.r.df$id <- rep(spe.df$id[1],2)
fit.r.df$from = rep("rmax",2)
fit.r.df$param = c("lnA","E")
fit.r.df$sta.spe = spe.df$sta.spe[1]
fit.t <- lm(data = spe.df, formula = log.one.tlag~mi.one.over.KT)
fit.t.df <- data.frame(summary(fit.t)$coefficients)
fit.t.df$id = rep(spe.df$id[1],2)
fit.t.df$from = rep("tlag",2)
fit.t.df$param = c("lnA","E")
fit.t.df$sta.spe = spe.df$sta.spe[1]
arrhe.df <- rbind(arrhe.df, fit.r.df, fit.t.df)
}
}
info.sta[info.sta$sta.spe == spes[i],]
View(info.sta)
# subset
spe.df <- info.sta[info.sta$sta.spe == spes[i],]
View(spe.df)
unique(info.sta$sta.spe)
length(stand.spe)
info.sta[info.sta$sta.spe == spes[i],]
spes[i]
info.sta[info.sta$sta.spe == spes[i],]
source('~/Documents/CMEEProject/code/arrhenius.R')
spe.df <- subset(info.sta, info.sta$sta.spe == spes[i])
source('~/Documents/CMEEProject/code/arrhenius.R')
# activation energy acorss species short- and long-term plot
Species_Overlap_Plot  <- ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0)) +
geom_errorbar(data = E_short,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_errorbar(data = E_long,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_point(data = E_plot,aes(y=E, colour=SL, shape = SL), size = 4, position="dodge") +
xlab('Parameter') +
ylab('Activation Energy (E)') +
theme(legend.title=element_blank(),
legend.justification=c(0,1), legend.position=c(0,1),
plot.margin = unit(c(1,0,1,1), "cm"))+
scale_colour_manual(name = "Colour", values =c('#E69F00','#D55E00','royalblue3'),
labels = c(expression(italic('E'['S'])),
expression(italic('E'['L'])),
#quote(italic('\U0112'[S]))
bquote(bar(x)*":" ~ .(avg))
)
) +
# scale_shape(guide = FALSE)+
#geom_hline(aes(yintercept=0.65), linetype='dotted') +
scale_shape_manual(name = "Shape",values =c(19,15,17),
labels = c(expression(italic('E'['S'])),
expression(italic('E'['L'])),
quote(italic('\U0112'[S])))
) +
coord_cartesian(ylim = c(0,5))
ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0)) +
geom_errorbar(data = E_short,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_errorbar(data = E_long,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge")
ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0)) +
geom_errorbar(data = E_short,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_errorbar(data = E_long,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_point(data = E_plot,aes(y=E, colour=SL, shape = SL), size = 4, position="dodge") +
xlab('Parameter') +
ylab('Activation Energy (E)')
ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0))
ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0)) +
geom_errorbar(data = E_short,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge")
ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0)) +
geom_errorbar(data = E_short,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_errorbar(data = E_long,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_point(data = E_plot,aes(y=E, colour=SL, shape = SL), size = 4, position="dodge")
fit.r.spe <- lm(fit.vali.info, formula = log.r ~ mi.one.over.KT)
fit.t.spe <- lm(fit.vali.info, formula = log.one.tlag~mi.one.over.KT)
CI.r.spe <- confint(fit.r.spe, level = 0.95)
CI.t.spe <- confint(fit.t.spe, level = 0.95)
edf <- fit.vali[fit.vali$param == "E",]
# save E value tables to latex
E_r <- subset(edf, edf$from == "rmax")
E_t <- subset(edf, edf$from == "tlag")
E_rmax <- data.frame(Species = E_r$sta.spe, "E value" = E_r$Estimate,
"Confidence Interval" = 2*E_r$Std..Error, "P value" = E_r$Pr...t..)
E_rmax_ave <- data.frame(Species = "Mean Value", "E value" = mean(E_r$Estimate),
"Confidence Interval" = ci_calc(E_r$Estimate), "P value" = mean(E_r$Pr...t..))
E_rmax <- rbind(E_rmax, E_rmax_ave)
E_tlag <- data.frame(Species = E_t$sta.spe, "E value" = E_t$Estimate,
"Confidence Interval" = 2*E_t$Std..Error, "P value" = E_t$Pr...t..)
E_tlag_ave <- data.frame(Species = "Mean Value", "E value" = mean(E_t$Estimate),
"Confidence Interval" = ci_calc(E_t$Estimate), "P value" = mean(E_t$Pr...t..))
E_tlag <- rbind(E_tlag, E_tlag_ave)
library(xtable)
print(xtable(E_rmax, type = "latex", digits = -10), file = "../results/arrhenius/E_rmax_table.tex")
print(xtable(E_tlag, type = "latex", digits = -10), file = "../results/arrhenius/E_tlag_table.tex")
View(E_rmax)
View(E_tlag)
mean.e.r <- mean(E_r$Estimate)
mean.e.t <- mean(E_t$Estimate)
mean.e.r.ci <- ci_calc(E_r$Estimate)
mean.e.t.ci <- ci_calc(E_t$Estimate)
p <- ggplot(data = edf, aes(x = Estimate, y = sta.spe, colour = from)) +
geom_point()+
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_errorbar(data = edf, aes(xmin = Estimate - 2*Std..Error, xmax = Estimate + 2*Std..Error)) +
# geom_rect(aes(xmin=CI.r.spe[2,1], xmax=CI.r.spe[2,2], ymin=-Inf, ymax=Inf), color = 'red') +
# geom_rect(aes(xmin=CI.t.spe[2,1], xmax=CI.t.spe[2,2], ymin=-Inf, ymax=Inf), color = 'blue') +
# add CI of E_L
annotate("rect", xmin=CI.r.spe[2,1], xmax=CI.r.spe[2,2], ymin=-Inf, ymax=Inf, alpha = .2) +
annotate("rect", xmin=CI.t.spe[2,1], xmax=CI.t.spe[2,2], ymin=-Inf, ymax=Inf, alpha = .2) +
# add E_L slope from fitting the whole validate data set
geom_vline(xintercept=fit.r.spe$coefficients[2], linetype="dashed", color = "red") +
geom_vline(xintercept=fit.t.spe$coefficients[2], linetype="dashed", color = "blue") +
annotate("text", label = "E_L estimated from rmax",
size = 2, x = fit.r.spe$coefficients[2]+3, y = "Pseudomonas") +
geom_segment(aes(x = fit.r.spe$coefficients[2], y = "Pseudomonas", xend = fit.r.spe$coefficients[2]+2, yend = "Pseudomonas"),
arrow = arrow(length = unit(0.15, "cm")), colour = 'black') +
annotate("text", label = "E_L estimated from tlag",size = 2, x = fit.t.spe$coefficients[2]+2, y = "pseudomonas.sp") +
geom_segment(aes(x = fit.t.spe$coefficients[2], y = "pseudomonas.sp", xend = fit.t.spe$coefficients[2]+1, yend = "pseudomonas.sp"),
arrow = arrow(length = unit(0.15, "cm")), colour = 'black') +
# add E_s(mean of E_species)
geom_vline(xintercept=mean.e.r, linetype="dashed", color = "darkred") +
geom_vline(xintercept=mean.e.t, linetype="dashed", color = "darkblue") +
annotate("text", label = "E_S estimated from rmax",size = 2, x = mean.e.r+2, y = "Staphylococcus") +
geom_segment(aes(x = mean.e.r, y = "Staphylococcus", xend = mean.e.r+1, yend = "Staphylococcus"),
arrow = arrow(length = unit(0.1, "cm")), colour = 'black') +
annotate("text", label = "E_S estimated from tlag", size = 2, x = mean.e.t+2, y = "Lactobaciulus.plantarum") +
geom_segment(aes(x = mean.e.t, y = "Lactobaciulus.plantarum", xend = mean.e.t+1, yend = "Lactobaciulus.plantarum"),
arrow = arrow(length = unit(0.1, "cm")), colour = 'black') +
# add CI of E_s
annotate("rect", xmin=mean.e.r-mean.e.r.ci, xmax=mean.e.r+mean.e.r.ci,ymin=-Inf, ymax=Inf, alpha = .2) +
annotate("rect", xmin=mean.e.t-mean.e.t.ci, xmax=mean.e.t+mean.e.t.ci,ymin=-Inf, ymax=Inf, alpha = .2)
p
######################################
# fitter plot ES, ES_average, and EL #
######################################
E_long <- data.frame(
SL = "Long-term",
from = c('rmax','tlag'),
E = c(fit.r.spe$coefficients[2],fit.t.spe$coefficients[2]),
E_min = c(CI.r.spe[2,1], CI.t.spe[2,1]),
E_max = c(CI.r.spe[2,2], CI.t.spe[2,2]))
E_short <- data.frame(
SL = "Short-term",
from = c('rmax','tlag'),
E = c(E_rmax[11,2],E_tlag[16,2]),
E_min = c(E_rmax[11,2]-E_rmax[11,3], E_rmax[11,2]-E_rmax[11,3]),
E_max = c(E_rmax[11,2]+E_rmax[11,3], E_rmax[11,2]+E_rmax[11,3]),
medi = c(median(E_rmax$E.value[-length(E_rmax$E.value)]), median(E_tlag$E.value[-length(E_tlag$E.value)])))
hist_df <- data.frame(value = c(E_short$E, E_short$medi),
label = c("Mean E estimated from rmax", "Mean E estimated from tlag",
"Median E estimated from rmax","Median E estimated from tlag"))
E_short <- E_short[,-ncol(E_short)]
E_plot <- rbind(E_short,E_long)
# histogram of the activation energy
hist.linetype <- c("twodash", "twodash","dotted", "dotted")
hist.color <- c("#D55E00","royalblue3","#D55E00","royalblue3",'#D55E00',"royalblue3")
p <- ggplot(edf, aes(x=Estimate, color=from, fill = from)) +
geom_density() +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
xlim(xmin = 0, xmax = 5) +
# theme(legend.position = 'none') +
geom_vline(data = hist_df, aes(xintercept=value, color=label)
, linetype = hist.linetype
, colour = c("#D55E00","royalblue3","#D55E00","royalblue3")
) +
scale_linetype_manual(guide = guide_legend(override.aes = list(colour = c("#D55E00","royalblue3","#D55E00","royalblue3")))) +
scale_color_manual(values=hist.color)
p
# activation energy acorss species short- and long-term plot
Species_Overlap_Plot  <- ggplot(E_long, aes(x=from)) +
theme_set(theme_bw()) +
theme(panel.grid.major = element_line(colour = NA)) +
geom_point(data=edf, aes(y=Estimate, colour='3', shape = '3'), alpha = 0.7, position = position_jitter(width = 0.4, height = 0.0)) +
geom_errorbar(data = E_short,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_errorbar(data = E_long,aes(ymax=E_max, ymin=E_min), width=0.15, size=1, position="dodge") +
geom_point(data = E_plot,aes(y=E, colour=SL, shape = SL), size = 4, position="dodge") +
xlab('Parameter') +
ylab('Activation Energy (E)') +
theme(legend.title=element_blank(),
legend.justification=c(0,1), legend.position=c(0,1),
plot.margin = unit(c(1,0,1,1), "cm"))+
scale_colour_manual(name = "Colour", values =c('#E69F00','#D55E00','royalblue3'),
labels = c(expression(italic('E'['S'])),
expression(italic('E'['L'])),
quote(italic('\U0112'[S])))
) +
# scale_shape(guide = FALSE)+
#geom_hline(aes(yintercept=0.65), linetype='dotted') +
scale_shape_manual(name = "Shape",values =c(19,15,17),
labels = c(expression(italic('E'['S'])),
expression(italic('E'['L'])),
quote(italic('\U0112'[S])))
) +
coord_cartesian(ylim = c(0,5))
Species_Overlap_Plot
